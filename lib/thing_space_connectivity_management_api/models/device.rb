# This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).

module ThingSpaceConnectivityManagementApi
  class Device < BaseModel
    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :account_name

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :billing_cycle_end_date

    # TODO: Write general description for this method
    # @return [List of CarrierInformation]
    attr_accessor :carrier_informations

    # TODO: Write general description for this method
    # @return [Boolean]
    attr_accessor :connected

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :created_at

    # TODO: Write general description for this method
    # @return [List of KvPair]
    attr_accessor :custom_fields

    # TODO: Write general description for this method
    # @return [List of DeviceId]
    attr_accessor :device_ids

    # TODO: Write general description for this method
    # @return [List of KvPair]
    attr_accessor :extended_attributes

    # TODO: Write general description for this method
    # @return [List of String]
    attr_accessor :group_names

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :ip_address

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :last_activation_by

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :last_activation_date

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :last_connection_date

    # A mapping from model property names to API property names
    def self.names
      if @hash.nil?
        @hash = {}
        @hash["account_name"] = "accountName"
        @hash["billing_cycle_end_date"] = "billingCycleEndDate"
        @hash["carrier_informations"] = "carrierInformations"
        @hash["connected"] = "connected"
        @hash["created_at"] = "createdAt"
        @hash["custom_fields"] = "customFields"
        @hash["device_ids"] = "deviceIds"
        @hash["extended_attributes"] = "extendedAttributes"
        @hash["group_names"] = "groupNames"
        @hash["ip_address"] = "ipAddress"
        @hash["last_activation_by"] = "lastActivationBy"
        @hash["last_activation_date"] = "lastActivationDate"
        @hash["last_connection_date"] = "lastConnectionDate"
      end
      @hash
    end

    def initialize(account_name = nil,
                   billing_cycle_end_date = nil,
                   carrier_informations = nil,
                   connected = nil,
                   created_at = nil,
                   custom_fields = nil,
                   device_ids = nil,
                   extended_attributes = nil,
                   group_names = nil,
                   ip_address = nil,
                   last_activation_by = nil,
                   last_activation_date = nil,
                   last_connection_date = nil)
      @account_name = account_name
      @billing_cycle_end_date = billing_cycle_end_date
      @carrier_informations = carrier_informations
      @connected = connected
      @created_at = created_at
      @custom_fields = custom_fields
      @device_ids = device_ids
      @extended_attributes = extended_attributes
      @group_names = group_names
      @ip_address = ip_address
      @last_activation_by = last_activation_by
      @last_activation_date = last_activation_date
      @last_connection_date = last_connection_date
    end

    # Creates an instance of the object from a hash
    def self.from_hash(hash)
      if hash == nil
        nil
      else
        # Extract variables from the hash
        account_name = hash["accountName"]
        billing_cycle_end_date = hash["billingCycleEndDate"]
        # Parameter is an array, so we need to iterate through it
        carrier_informations = nil
        if hash["carrierInformations"] != nil
          carrier_informations = Array.new
          hash["carrierInformations"].each{|structure| carrier_informations << (CarrierInformation.from_hash(structure) if structure)}
        end
        connected = hash["connected"]
        created_at = hash["createdAt"]
        # Parameter is an array, so we need to iterate through it
        custom_fields = nil
        if hash["customFields"] != nil
          custom_fields = Array.new
          hash["customFields"].each{|structure| custom_fields << (KvPair.from_hash(structure) if structure)}
        end
        # Parameter is an array, so we need to iterate through it
        device_ids = nil
        if hash["deviceIds"] != nil
          device_ids = Array.new
          hash["deviceIds"].each{|structure| device_ids << (DeviceId.from_hash(structure) if structure)}
        end
        # Parameter is an array, so we need to iterate through it
        extended_attributes = nil
        if hash["extendedAttributes"] != nil
          extended_attributes = Array.new
          hash["extendedAttributes"].each{|structure| extended_attributes << (KvPair.from_hash(structure) if structure)}
        end
        group_names = hash["groupNames"]
        ip_address = hash["ipAddress"]
        last_activation_by = hash["lastActivationBy"]
        last_activation_date = hash["lastActivationDate"]
        last_connection_date = hash["lastConnectionDate"]

        # Create object from extracted values
        Device.new(account_name,
                   billing_cycle_end_date,
                   carrier_informations,
                   connected,
                   created_at,
                   custom_fields,
                   device_ids,
                   extended_attributes,
                   group_names,
                   ip_address,
                   last_activation_by,
                   last_activation_date,
                   last_connection_date)
      end
    end
  end
end
