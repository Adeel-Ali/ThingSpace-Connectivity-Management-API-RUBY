# This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).

module ThingSpaceConnectivityManagementApi
  class GroupListResponse < BaseModel
    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :description

    # TODO: Write general description for this method
    # @return [List of DeviceList]
    attr_accessor :devices

    # TODO: Write general description for this method
    # @return [Boolean]
    attr_accessor :has_more_data

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :name

    # A mapping from model property names to API property names
    def self.names
      if @hash.nil?
        @hash = {}
        @hash["description"] = "description"
        @hash["devices"] = "devices"
        @hash["has_more_data"] = "hasMoreData"
        @hash["name"] = "name"
      end
      @hash
    end

    def initialize(description = nil,
                   devices = nil,
                   has_more_data = nil,
                   name = nil)
      @description = description
      @devices = devices
      @has_more_data = has_more_data
      @name = name
    end

    # Creates an instance of the object from a hash
    def self.from_hash(hash)
      if hash == nil
        nil
      else
        # Extract variables from the hash
        description = hash["description"]
        # Parameter is an array, so we need to iterate through it
        devices = nil
        if hash["devices"] != nil
          devices = Array.new
          hash["devices"].each{|structure| devices << (DeviceList.from_hash(structure) if structure)}
        end
        has_more_data = hash["hasMoreData"]
        name = hash["name"]

        # Create object from extracted values
        GroupListResponse.new(description,
                              devices,
                              has_more_data,
                              name)
      end
    end
  end
end
