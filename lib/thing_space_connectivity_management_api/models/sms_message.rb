# This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).

module ThingSpaceConnectivityManagementApi
  class SmsMessage < BaseModel
    # TODO: Write general description for this method
    # @return [List of DeviceId]
    attr_accessor :device_ids

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :message

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :timestamp

    # A mapping from model property names to API property names
    def self.names
      if @hash.nil?
        @hash = {}
        @hash["device_ids"] = "deviceIds"
        @hash["message"] = "message"
        @hash["timestamp"] = "timestamp"
      end
      @hash
    end

    def initialize(device_ids = nil,
                   message = nil,
                   timestamp = nil)
      @device_ids = device_ids
      @message = message
      @timestamp = timestamp
    end

    # Creates an instance of the object from a hash
    def self.from_hash(hash)
      if hash == nil
        nil
      else
        # Extract variables from the hash
        # Parameter is an array, so we need to iterate through it
        device_ids = nil
        if hash["deviceIds"] != nil
          device_ids = Array.new
          hash["deviceIds"].each{|structure| device_ids << (DeviceId.from_hash(structure) if structure)}
        end
        message = hash["message"]
        timestamp = hash["timestamp"]

        # Create object from extracted values
        SmsMessage.new(device_ids,
                       message,
                       timestamp)
      end
    end
  end
end
