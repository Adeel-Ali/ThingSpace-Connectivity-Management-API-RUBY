# This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).

module ThingSpaceConnectivityManagementApi
  class PlaceOfUse < BaseModel
    # TODO: Write general description for this method
    # @return [Address]
    attr_accessor :address

    # TODO: Write general description for this method
    # @return [CustomerName]
    attr_accessor :customer_name

    # A mapping from model property names to API property names
    def self.names
      if @hash.nil?
        @hash = {}
        @hash["address"] = "address"
        @hash["customer_name"] = "customerName"
      end
      @hash
    end

    def initialize(address = nil,
                   customer_name = nil)
      @address = address
      @customer_name = customer_name
    end

    # Creates an instance of the object from a hash
    def self.from_hash(hash)
      if hash == nil
        nil
      else
        # Extract variables from the hash
        address = Address.from_hash(hash["address"]) if hash["address"]
        customer_name = CustomerName.from_hash(hash["customerName"]) if hash["customerName"]

        # Create object from extracted values
        PlaceOfUse.new(address,
                       customer_name)
      end
    end
  end
end
